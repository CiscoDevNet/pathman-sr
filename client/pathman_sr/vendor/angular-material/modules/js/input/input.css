/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v1.0.5
 */
md-input-container {
  display: inline-block;
  position: relative;
  padding: 2px;
  margin: 18px 0;
  vertical-align: middle;
  /*
   * The .md-input class is added to the input/textarea
   */ }
  md-input-container:after {
    content: '';
    display: table;
    clear: both; }
  md-input-container.md-block {
    display: block; }
  md-input-container .md-errors-spacer {
    float: right;
    min-height: 24px;
    min-width: 1px; }
    html[dir=rtl] md-input-container .md-errors-spacer {
      float: left;
      unicode-bidi: embed; }
    body[dir=rtl] md-input-container .md-errors-spacer {
      float: left;
      unicode-bidi: embed; }
    md-input-container .md-errors-spacer bdo[dir=rtl] {
      direction: rtl;
      unicode-bidi: bidi-override; }
    md-input-container .md-errors-spacer bdo[dir=ltr] {
      direction: ltr;
      unicode-bidi: bidi-override; }
  md-input-container > md-icon {
    position: absolute;
    top: 5px;
    left: 2px;
    right: auto; }
    html[dir=rtl] md-input-container > md-icon {
      left: auto;
      unicode-bidi: embed; }
    body[dir=rtl] md-input-container > md-icon {
      left: auto;
      unicode-bidi: embed; }
    md-input-container > md-icon bdo[dir=rtl] {
      direction: rtl;
      unicode-bidi: bidi-override; }
    md-input-container > md-icon bdo[dir=ltr] {
      direction: ltr;
      unicode-bidi: bidi-override; }
    html[dir=rtl] md-input-container > md-icon {
      right: 2px;
      unicode-bidi: embed; }
    body[dir=rtl] md-input-container > md-icon {
      right: 2px;
      unicode-bidi: embed; }
    md-input-container > md-icon bdo[dir=rtl] {
      direction: rtl;
      unicode-bidi: bidi-override; }
    md-input-container > md-icon bdo[dir=ltr] {
      direction: ltr;
      unicode-bidi: bidi-override; }
  md-input-container textarea,
  md-input-container input[type="text"],
  md-input-container input[type="password"],
  md-input-container input[type="datetime"],
  md-input-container input[type="datetime-local"],
  md-input-container input[type="date"],
  md-input-container input[type="month"],
  md-input-container input[type="time"],
  md-input-container input[type="week"],
  md-input-container input[type="number"],
  md-input-container input[type="email"],
  md-input-container input[type="url"],
  md-input-container input[type="search"],
  md-input-container input[type="tel"],
  md-input-container input[type="color"] {
    /* remove default appearance from all input/textarea */
    -moz-appearance: none;
    -webkit-appearance: none; }
  md-input-container input[type="date"],
  md-input-container input[type="datetime-local"],
  md-input-container input[type="month"],
  md-input-container input[type="time"],
  md-input-container input[type="week"] {
    min-height: 26px; }
  md-input-container textarea {
    resize: none;
    overflow: hidden; }
  md-input-container textarea.md-input {
    min-height: 26px;
    -ms-flex-preferred-size: auto; }
  md-input-container label:not(.md-container-ignore) {
    position: absolute;
    bottom: 100%;
    left: 0;
    right: auto; }
    html[dir=rtl] md-input-container label:not(.md-container-ignore) {
      left: auto;
      unicode-bidi: embed; }
    body[dir=rtl] md-input-container label:not(.md-container-ignore) {
      left: auto;
      unicode-bidi: embed; }
    md-input-container label:not(.md-container-ignore) bdo[dir=rtl] {
      direction: rtl;
      unicode-bidi: bidi-override; }
    md-input-container label:not(.md-container-ignore) bdo[dir=ltr] {
      direction: ltr;
      unicode-bidi: bidi-override; }
    html[dir=rtl] md-input-container label:not(.md-container-ignore) {
      right: 0;
      unicode-bidi: embed; }
    body[dir=rtl] md-input-container label:not(.md-container-ignore) {
      right: 0;
      unicode-bidi: embed; }
    md-input-container label:not(.md-container-ignore) bdo[dir=rtl] {
      direction: rtl;
      unicode-bidi: bidi-override; }
    md-input-container label:not(.md-container-ignore) bdo[dir=ltr] {
      direction: ltr;
      unicode-bidi: bidi-override; }
  md-input-container label:not(.md-no-float):not(.md-container-ignore),
  md-input-container .md-placeholder {
    -webkit-order: 1;
        -ms-flex-order: 1;
            order: 1;
    pointer-events: none;
    -webkit-font-smoothing: antialiased;
    padding-left: 3px;
    padding-right: 0;
    z-index: 1;
    -webkit-transform: translate3d(0, 28px, 0) scale(1);
            transform: translate3d(0, 28px, 0) scale(1);
    transition: -webkit-transform cubic-bezier(0.25, 0.8, 0.25, 1) 0.25s;
    transition: transform cubic-bezier(0.25, 0.8, 0.25, 1) 0.25s;
    -webkit-transform-origin: left top;
            transform-origin: left top; }
    html[dir=rtl] md-input-container label:not(.md-no-float):not(.md-container-ignore), html[dir=rtl]
    md-input-container .md-placeholder {
      padding-left: 0;
      unicode-bidi: embed; }
    body[dir=rtl] md-input-container label:not(.md-no-float):not(.md-container-ignore), body[dir=rtl]
    md-input-container .md-placeholder {
      padding-left: 0;
      unicode-bidi: embed; }
    md-input-container label:not(.md-no-float):not(.md-container-ignore) bdo[dir=rtl],
    md-input-container .md-placeholder bdo[dir=rtl] {
      direction: rtl;
      unicode-bidi: bidi-override; }
    md-input-container label:not(.md-no-float):not(.md-container-ignore) bdo[dir=ltr],
    md-input-container .md-placeholder bdo[dir=ltr] {
      direction: ltr;
      unicode-bidi: bidi-override; }
    html[dir=rtl] md-input-container label:not(.md-no-float):not(.md-container-ignore), html[dir=rtl]
    md-input-container .md-placeholder {
      padding-right: 3px;
      unicode-bidi: embed; }
    body[dir=rtl] md-input-container label:not(.md-no-float):not(.md-container-ignore), body[dir=rtl]
    md-input-container .md-placeholder {
      padding-right: 3px;
      unicode-bidi: embed; }
    md-input-container label:not(.md-no-float):not(.md-container-ignore) bdo[dir=rtl],
    md-input-container .md-placeholder bdo[dir=rtl] {
      direction: rtl;
      unicode-bidi: bidi-override; }
    md-input-container label:not(.md-no-float):not(.md-container-ignore) bdo[dir=ltr],
    md-input-container .md-placeholder bdo[dir=ltr] {
      direction: ltr;
      unicode-bidi: bidi-override; }
    html[dir=rtl] md-input-container label:not(.md-no-float):not(.md-container-ignore), html[dir=rtl]
    md-input-container .md-placeholder {
      -webkit-transform-origin: right top;
              transform-origin: right top;
      unicode-bidi: embed; }
    body[dir=rtl] md-input-container label:not(.md-no-float):not(.md-container-ignore), body[dir=rtl]
    md-input-container .md-placeholder {
      -webkit-transform-origin: right top;
              transform-origin: right top;
      unicode-bidi: embed; }
    md-input-container label:not(.md-no-float):not(.md-container-ignore) bdo[dir=rtl],
    md-input-container .md-placeholder bdo[dir=rtl] {
      direction: rtl;
      unicode-bidi: bidi-override; }
    md-input-container label:not(.md-no-float):not(.md-container-ignore) bdo[dir=ltr],
    md-input-container .md-placeholder bdo[dir=ltr] {
      direction: ltr;
      unicode-bidi: bidi-override; }
  md-input-container .md-placeholder {
    position: absolute;
    top: 0;
    opacity: 0;
    transition-property: opacity, -webkit-transform;
    transition-property: opacity, transform;
    -webkit-transform: translate3d(0, 30px, 0);
            transform: translate3d(0, 30px, 0); }
  md-input-container.md-input-focused .md-placeholder {
    opacity: 1;
    -webkit-transform: translate3d(0, 24px, 0);
            transform: translate3d(0, 24px, 0); }
  md-input-container.md-input-has-value .md-placeholder {
    transition: none;
    opacity: 0; }
  md-input-container:not(.md-input-has-value) input:not(:focus),
  md-input-container:not(.md-input-has-value) input:not(:focus)::-webkit-datetime-edit-ampm-field,
  md-input-container:not(.md-input-has-value) input:not(:focus)::-webkit-datetime-edit-day-field,
  md-input-container:not(.md-input-has-value) input:not(:focus)::-webkit-datetime-edit-hour-field,
  md-input-container:not(.md-input-has-value) input:not(:focus)::-webkit-datetime-edit-millisecond-field,
  md-input-container:not(.md-input-has-value) input:not(:focus)::-webkit-datetime-edit-minute-field,
  md-input-container:not(.md-input-has-value) input:not(:focus)::-webkit-datetime-edit-month-field,
  md-input-container:not(.md-input-has-value) input:not(:focus)::-webkit-datetime-edit-second-field,
  md-input-container:not(.md-input-has-value) input:not(:focus)::-webkit-datetime-edit-week-field,
  md-input-container:not(.md-input-has-value) input:not(:focus)::-webkit-datetime-edit-year-field,
  md-input-container:not(.md-input-has-value) input:not(:focus)::-webkit-datetime-edit-text {
    color: transparent; }
  md-input-container .md-input {
    -webkit-order: 2;
        -ms-flex-order: 2;
            order: 2;
    display: block;
    margin-top: 0;
    background: none;
    padding-top: 2px;
    padding-bottom: 1px;
    padding-left: 2px;
    padding-right: 2px;
    border-width: 0 0 1px 0;
    line-height: 26px;
    height: 30px;
    -ms-flex-preferred-size: 26px;
    border-radius: 0;
    border-style: solid;
    width: 100%;
    box-sizing: border-box;
    float: left; }
    html[dir=rtl] md-input-container .md-input {
      float: right;
      unicode-bidi: embed; }
    body[dir=rtl] md-input-container .md-input {
      float: right;
      unicode-bidi: embed; }
    md-input-container .md-input bdo[dir=rtl] {
      direction: rtl;
      unicode-bidi: bidi-override; }
    md-input-container .md-input bdo[dir=ltr] {
      direction: ltr;
      unicode-bidi: bidi-override; }
    md-input-container .md-input:focus {
      outline: none; }
    md-input-container .md-input:invalid {
      outline: none;
      box-shadow: none; }
    md-input-container .md-input.md-no-flex {
      -webkit-flex: none !important;
          -ms-flex: none !important;
              flex: none !important; }
  md-input-container .md-char-counter {
    text-align: right;
    padding-right: 2px;
    padding-left: 0; }
    html[dir=rtl] md-input-container .md-char-counter {
      text-align: left;
      unicode-bidi: embed; }
    body[dir=rtl] md-input-container .md-char-counter {
      text-align: left;
      unicode-bidi: embed; }
    md-input-container .md-char-counter bdo[dir=rtl] {
      direction: rtl;
      unicode-bidi: bidi-override; }
    md-input-container .md-char-counter bdo[dir=ltr] {
      direction: ltr;
      unicode-bidi: bidi-override; }
    html[dir=rtl] md-input-container .md-char-counter {
      padding-right: 0;
      unicode-bidi: embed; }
    body[dir=rtl] md-input-container .md-char-counter {
      padding-right: 0;
      unicode-bidi: embed; }
    md-input-container .md-char-counter bdo[dir=rtl] {
      direction: rtl;
      unicode-bidi: bidi-override; }
    md-input-container .md-char-counter bdo[dir=ltr] {
      direction: ltr;
      unicode-bidi: bidi-override; }
    html[dir=rtl] md-input-container .md-char-counter {
      padding-left: 2px;
      unicode-bidi: embed; }
    body[dir=rtl] md-input-container .md-char-counter {
      padding-left: 2px;
      unicode-bidi: embed; }
    md-input-container .md-char-counter bdo[dir=rtl] {
      direction: rtl;
      unicode-bidi: bidi-override; }
    md-input-container .md-char-counter bdo[dir=ltr] {
      direction: ltr;
      unicode-bidi: bidi-override; }
  md-input-container ng-messages, md-input-container data-ng-messages, md-input-container x-ng-messages,
  md-input-container [ng-messages], md-input-container [data-ng-messages], md-input-container [x-ng-messages] {
    position: relative;
    -webkit-order: 4;
        -ms-flex-order: 4;
            order: 4;
    overflow: hidden;
    clear: left; }
    html[dir=rtl] md-input-container ng-messages, html[dir=rtl] md-input-container data-ng-messages, html[dir=rtl] md-input-container x-ng-messages, html[dir=rtl]
    md-input-container [ng-messages], html[dir=rtl] md-input-container [data-ng-messages], html[dir=rtl] md-input-container [x-ng-messages] {
      clear: right;
      unicode-bidi: embed; }
    body[dir=rtl] md-input-container ng-messages, body[dir=rtl] md-input-container data-ng-messages, body[dir=rtl] md-input-container x-ng-messages, body[dir=rtl]
    md-input-container [ng-messages], body[dir=rtl] md-input-container [data-ng-messages], body[dir=rtl] md-input-container [x-ng-messages] {
      clear: right;
      unicode-bidi: embed; }
    md-input-container ng-messages bdo[dir=rtl], md-input-container data-ng-messages bdo[dir=rtl], md-input-container x-ng-messages bdo[dir=rtl],
    md-input-container [ng-messages] bdo[dir=rtl], md-input-container [data-ng-messages] bdo[dir=rtl], md-input-container [x-ng-messages] bdo[dir=rtl] {
      direction: rtl;
      unicode-bidi: bidi-override; }
    md-input-container ng-messages bdo[dir=ltr], md-input-container data-ng-messages bdo[dir=ltr], md-input-container x-ng-messages bdo[dir=ltr],
    md-input-container [ng-messages] bdo[dir=ltr], md-input-container [data-ng-messages] bdo[dir=ltr], md-input-container [x-ng-messages] bdo[dir=ltr] {
      direction: ltr;
      unicode-bidi: bidi-override; }
    md-input-container ng-messages.ng-enter ng-message, md-input-container ng-messages.ng-enter data-ng-message, md-input-container ng-messages.ng-enter x-ng-message,
    md-input-container ng-messages.ng-enter [ng-message], md-input-container ng-messages.ng-enter [data-ng-message], md-input-container ng-messages.ng-enter [x-ng-message],
    md-input-container ng-messages.ng-enter [ng-message-exp], md-input-container ng-messages.ng-enter [data-ng-message-exp], md-input-container ng-messages.ng-enter [x-ng-message-exp], md-input-container data-ng-messages.ng-enter ng-message, md-input-container data-ng-messages.ng-enter data-ng-message, md-input-container data-ng-messages.ng-enter x-ng-message,
    md-input-container data-ng-messages.ng-enter [ng-message], md-input-container data-ng-messages.ng-enter [data-ng-message], md-input-container data-ng-messages.ng-enter [x-ng-message],
    md-input-container data-ng-messages.ng-enter [ng-message-exp], md-input-container data-ng-messages.ng-enter [data-ng-message-exp], md-input-container data-ng-messages.ng-enter [x-ng-message-exp], md-input-container x-ng-messages.ng-enter ng-message, md-input-container x-ng-messages.ng-enter data-ng-message, md-input-container x-ng-messages.ng-enter x-ng-message,
    md-input-container x-ng-messages.ng-enter [ng-message], md-input-container x-ng-messages.ng-enter [data-ng-message], md-input-container x-ng-messages.ng-enter [x-ng-message],
    md-input-container x-ng-messages.ng-enter [ng-message-exp], md-input-container x-ng-messages.ng-enter [data-ng-message-exp], md-input-container x-ng-messages.ng-enter [x-ng-message-exp],
    md-input-container [ng-messages].ng-enter ng-message,
    md-input-container [ng-messages].ng-enter data-ng-message,
    md-input-container [ng-messages].ng-enter x-ng-message,
    md-input-container [ng-messages].ng-enter [ng-message],
    md-input-container [ng-messages].ng-enter [data-ng-message],
    md-input-container [ng-messages].ng-enter [x-ng-message],
    md-input-container [ng-messages].ng-enter [ng-message-exp],
    md-input-container [ng-messages].ng-enter [data-ng-message-exp],
    md-input-container [ng-messages].ng-enter [x-ng-message-exp], md-input-container [data-ng-messages].ng-enter ng-message, md-input-container [data-ng-messages].ng-enter data-ng-message, md-input-container [data-ng-messages].ng-enter x-ng-message,
    md-input-container [data-ng-messages].ng-enter [ng-message], md-input-container [data-ng-messages].ng-enter [data-ng-message], md-input-container [data-ng-messages].ng-enter [x-ng-message],
    md-input-container [data-ng-messages].ng-enter [ng-message-exp], md-input-container [data-ng-messages].ng-enter [data-ng-message-exp], md-input-container [data-ng-messages].ng-enter [x-ng-message-exp], md-input-container [x-ng-messages].ng-enter ng-message, md-input-container [x-ng-messages].ng-enter data-ng-message, md-input-container [x-ng-messages].ng-enter x-ng-message,
    md-input-container [x-ng-messages].ng-enter [ng-message], md-input-container [x-ng-messages].ng-enter [data-ng-message], md-input-container [x-ng-messages].ng-enter [x-ng-message],
    md-input-container [x-ng-messages].ng-enter [ng-message-exp], md-input-container [x-ng-messages].ng-enter [data-ng-message-exp], md-input-container [x-ng-messages].ng-enter [x-ng-message-exp] {
      opacity: 0;
      margin-top: -100px; }
  md-input-container ng-message, md-input-container data-ng-message, md-input-container x-ng-message,
  md-input-container [ng-message], md-input-container [data-ng-message], md-input-container [x-ng-message],
  md-input-container [ng-message-exp], md-input-container [data-ng-message-exp], md-input-container [x-ng-message-exp],
  md-input-container .md-char-counter {
    font-size: 12px;
    line-height: 14px;
    overflow: hidden;
    transition: all 0.3s cubic-bezier(0.55, 0, 0.55, 0.2);
    opacity: 1;
    margin-top: 0;
    padding-top: 5px; }
    md-input-container ng-message:not(.md-char-counter), md-input-container data-ng-message:not(.md-char-counter), md-input-container x-ng-message:not(.md-char-counter),
    md-input-container [ng-message]:not(.md-char-counter), md-input-container [data-ng-message]:not(.md-char-counter), md-input-container [x-ng-message]:not(.md-char-counter),
    md-input-container [ng-message-exp]:not(.md-char-counter), md-input-container [data-ng-message-exp]:not(.md-char-counter), md-input-container [x-ng-message-exp]:not(.md-char-counter),
    md-input-container .md-char-counter:not(.md-char-counter) {
      padding-right: 5px;
      padding-left: 0; }
      html[dir=rtl] md-input-container ng-message:not(.md-char-counter), html[dir=rtl] md-input-container data-ng-message:not(.md-char-counter), html[dir=rtl] md-input-container x-ng-message:not(.md-char-counter), html[dir=rtl]
      md-input-container [ng-message]:not(.md-char-counter), html[dir=rtl] md-input-container [data-ng-message]:not(.md-char-counter), html[dir=rtl] md-input-container [x-ng-message]:not(.md-char-counter), html[dir=rtl]
      md-input-container [ng-message-exp]:not(.md-char-counter), html[dir=rtl] md-input-container [data-ng-message-exp]:not(.md-char-counter), html[dir=rtl] md-input-container [x-ng-message-exp]:not(.md-char-counter), html[dir=rtl]
      md-input-container .md-char-counter:not(.md-char-counter) {
        padding-right: 0;
        unicode-bidi: embed; }
      body[dir=rtl] md-input-container ng-message:not(.md-char-counter), body[dir=rtl] md-input-container data-ng-message:not(.md-char-counter), body[dir=rtl] md-input-container x-ng-message:not(.md-char-counter), body[dir=rtl]
      md-input-container [ng-message]:not(.md-char-counter), body[dir=rtl] md-input-container [data-ng-message]:not(.md-char-counter), body[dir=rtl] md-input-container [x-ng-message]:not(.md-char-counter), body[dir=rtl]
      md-input-container [ng-message-exp]:not(.md-char-counter), body[dir=rtl] md-input-container [data-ng-message-exp]:not(.md-char-counter), body[dir=rtl] md-input-container [x-ng-message-exp]:not(.md-char-counter), body[dir=rtl]
      md-input-container .md-char-counter:not(.md-char-counter) {
        padding-right: 0;
        unicode-bidi: embed; }
      md-input-container ng-message:not(.md-char-counter) bdo[dir=rtl], md-input-container data-ng-message:not(.md-char-counter) bdo[dir=rtl], md-input-container x-ng-message:not(.md-char-counter) bdo[dir=rtl],
      md-input-container [ng-message]:not(.md-char-counter) bdo[dir=rtl], md-input-container [data-ng-message]:not(.md-char-counter) bdo[dir=rtl], md-input-container [x-ng-message]:not(.md-char-counter) bdo[dir=rtl],
      md-input-container [ng-message-exp]:not(.md-char-counter) bdo[dir=rtl], md-input-container [data-ng-message-exp]:not(.md-char-counter) bdo[dir=rtl], md-input-container [x-ng-message-exp]:not(.md-char-counter) bdo[dir=rtl],
      md-input-container .md-char-counter:not(.md-char-counter) bdo[dir=rtl] {
        direction: rtl;
        unicode-bidi: bidi-override; }
      md-input-container ng-message:not(.md-char-counter) bdo[dir=ltr], md-input-container data-ng-message:not(.md-char-counter) bdo[dir=ltr], md-input-container x-ng-message:not(.md-char-counter) bdo[dir=ltr],
      md-input-container [ng-message]:not(.md-char-counter) bdo[dir=ltr], md-input-container [data-ng-message]:not(.md-char-counter) bdo[dir=ltr], md-input-container [x-ng-message]:not(.md-char-counter) bdo[dir=ltr],
      md-input-container [ng-message-exp]:not(.md-char-counter) bdo[dir=ltr], md-input-container [data-ng-message-exp]:not(.md-char-counter) bdo[dir=ltr], md-input-container [x-ng-message-exp]:not(.md-char-counter) bdo[dir=ltr],
      md-input-container .md-char-counter:not(.md-char-counter) bdo[dir=ltr] {
        direction: ltr;
        unicode-bidi: bidi-override; }
      html[dir=rtl] md-input-container ng-message:not(.md-char-counter), html[dir=rtl] md-input-container data-ng-message:not(.md-char-counter), html[dir=rtl] md-input-container x-ng-message:not(.md-char-counter), html[dir=rtl]
      md-input-container [ng-message]:not(.md-char-counter), html[dir=rtl] md-input-container [data-ng-message]:not(.md-char-counter), html[dir=rtl] md-input-container [x-ng-message]:not(.md-char-counter), html[dir=rtl]
      md-input-container [ng-message-exp]:not(.md-char-counter), html[dir=rtl] md-input-container [data-ng-message-exp]:not(.md-char-counter), html[dir=rtl] md-input-container [x-ng-message-exp]:not(.md-char-counter), html[dir=rtl]
      md-input-container .md-char-counter:not(.md-char-counter) {
        padding-left: 5px;
        unicode-bidi: embed; }
      body[dir=rtl] md-input-container ng-message:not(.md-char-counter), body[dir=rtl] md-input-container data-ng-message:not(.md-char-counter), body[dir=rtl] md-input-container x-ng-message:not(.md-char-counter), body[dir=rtl]
      md-input-container [ng-message]:not(.md-char-counter), body[dir=rtl] md-input-container [data-ng-message]:not(.md-char-counter), body[dir=rtl] md-input-container [x-ng-message]:not(.md-char-counter), body[dir=rtl]
      md-input-container [ng-message-exp]:not(.md-char-counter), body[dir=rtl] md-input-container [data-ng-message-exp]:not(.md-char-counter), body[dir=rtl] md-input-container [x-ng-message-exp]:not(.md-char-counter), body[dir=rtl]
      md-input-container .md-char-counter:not(.md-char-counter) {
        padding-left: 5px;
        unicode-bidi: embed; }
      md-input-container ng-message:not(.md-char-counter) bdo[dir=rtl], md-input-container data-ng-message:not(.md-char-counter) bdo[dir=rtl], md-input-container x-ng-message:not(.md-char-counter) bdo[dir=rtl],
      md-input-container [ng-message]:not(.md-char-counter) bdo[dir=rtl], md-input-container [data-ng-message]:not(.md-char-counter) bdo[dir=rtl], md-input-container [x-ng-message]:not(.md-char-counter) bdo[dir=rtl],
      md-input-container [ng-message-exp]:not(.md-char-counter) bdo[dir=rtl], md-input-container [data-ng-message-exp]:not(.md-char-counter) bdo[dir=rtl], md-input-container [x-ng-message-exp]:not(.md-char-counter) bdo[dir=rtl],
      md-input-container .md-char-counter:not(.md-char-counter) bdo[dir=rtl] {
        direction: rtl;
        unicode-bidi: bidi-override; }
      md-input-container ng-message:not(.md-char-counter) bdo[dir=ltr], md-input-container data-ng-message:not(.md-char-counter) bdo[dir=ltr], md-input-container x-ng-message:not(.md-char-counter) bdo[dir=ltr],
      md-input-container [ng-message]:not(.md-char-counter) bdo[dir=ltr], md-input-container [data-ng-message]:not(.md-char-counter) bdo[dir=ltr], md-input-container [x-ng-message]:not(.md-char-counter) bdo[dir=ltr],
      md-input-container [ng-message-exp]:not(.md-char-counter) bdo[dir=ltr], md-input-container [data-ng-message-exp]:not(.md-char-counter) bdo[dir=ltr], md-input-container [x-ng-message-exp]:not(.md-char-counter) bdo[dir=ltr],
      md-input-container .md-char-counter:not(.md-char-counter) bdo[dir=ltr] {
        direction: ltr;
        unicode-bidi: bidi-override; }
  md-input-container:not(.md-input-invalid) .md-auto-hide .md-input-message-animation {
    opacity: 0;
    margin-top: -100px; }
  md-input-container .md-auto-hide .md-input-message-animation:not(.ng-animate) {
    opacity: 0;
    margin-top: -100px; }
  md-input-container .md-input-message-animation.ng-enter {
    opacity: 0;
    margin-top: -100px; }
  md-input-container.md-input-focused label:not(.md-no-float), md-input-container.md-input-has-placeholder label:not(.md-no-float), md-input-container.md-input-has-value label:not(.md-no-float) {
    -webkit-transform: translate3d(0, 6px, 0) scale(0.75);
            transform: translate3d(0, 6px, 0) scale(0.75); }
  md-input-container.md-input-has-value label {
    transition: none; }
  md-input-container.md-input-focused .md-input,
  md-input-container .md-input.ng-invalid.ng-dirty {
    padding-bottom: 0;
    border-width: 0 0 2px 0; }
  md-input-container .md-input[disabled],
  [disabled] md-input-container .md-input {
    background-position: 0 bottom;
    background-size: 4px 1px;
    background-repeat: repeat-x;
    margin-bottom: -1px; }
  md-input-container.md-icon-float {
    transition: margin-top 0.5s cubic-bezier(0.25, 0.8, 0.25, 1); }
    md-input-container.md-icon-float > label {
      pointer-events: none;
      position: absolute; }
    md-input-container.md-icon-float > md-icon {
      top: 2px;
      left: 2px;
      right: auto; }
      html[dir=rtl] md-input-container.md-icon-float > md-icon {
        left: auto;
        unicode-bidi: embed; }
      body[dir=rtl] md-input-container.md-icon-float > md-icon {
        left: auto;
        unicode-bidi: embed; }
      md-input-container.md-icon-float > md-icon bdo[dir=rtl] {
        direction: rtl;
        unicode-bidi: bidi-override; }
      md-input-container.md-icon-float > md-icon bdo[dir=ltr] {
        direction: ltr;
        unicode-bidi: bidi-override; }
      html[dir=rtl] md-input-container.md-icon-float > md-icon {
        right: 2px;
        unicode-bidi: embed; }
      body[dir=rtl] md-input-container.md-icon-float > md-icon {
        right: 2px;
        unicode-bidi: embed; }
      md-input-container.md-icon-float > md-icon bdo[dir=rtl] {
        direction: rtl;
        unicode-bidi: bidi-override; }
      md-input-container.md-icon-float > md-icon bdo[dir=ltr] {
        direction: ltr;
        unicode-bidi: bidi-override; }
    md-input-container.md-icon-float.md-input-focused label, md-input-container.md-icon-float.md-input-has-value label {
      -webkit-transform: translate3d(0, 6px, 0) scale(0.75);
              transform: translate3d(0, 6px, 0) scale(0.75);
      transition: -webkit-transform cubic-bezier(0.25, 0.8, 0.25, 1) 0.5s;
      transition: transform cubic-bezier(0.25, 0.8, 0.25, 1) 0.5s; }
  md-input-container.md-icon-left {
    padding-left: 36px;
    padding-right: 0; }
    html[dir=rtl] md-input-container.md-icon-left {
      padding-left: 0;
      unicode-bidi: embed; }
    body[dir=rtl] md-input-container.md-icon-left {
      padding-left: 0;
      unicode-bidi: embed; }
    md-input-container.md-icon-left bdo[dir=rtl] {
      direction: rtl;
      unicode-bidi: bidi-override; }
    md-input-container.md-icon-left bdo[dir=ltr] {
      direction: ltr;
      unicode-bidi: bidi-override; }
    html[dir=rtl] md-input-container.md-icon-left {
      padding-right: 36px;
      unicode-bidi: embed; }
    body[dir=rtl] md-input-container.md-icon-left {
      padding-right: 36px;
      unicode-bidi: embed; }
    md-input-container.md-icon-left bdo[dir=rtl] {
      direction: rtl;
      unicode-bidi: bidi-override; }
    md-input-container.md-icon-left bdo[dir=ltr] {
      direction: ltr;
      unicode-bidi: bidi-override; }
    md-input-container.md-icon-left > label {
      left: 36px;
      right: auto; }
      html[dir=rtl] md-input-container.md-icon-left > label {
        left: auto;
        unicode-bidi: embed; }
      body[dir=rtl] md-input-container.md-icon-left > label {
        left: auto;
        unicode-bidi: embed; }
      md-input-container.md-icon-left > label bdo[dir=rtl] {
        direction: rtl;
        unicode-bidi: bidi-override; }
      md-input-container.md-icon-left > label bdo[dir=ltr] {
        direction: ltr;
        unicode-bidi: bidi-override; }
      html[dir=rtl] md-input-container.md-icon-left > label {
        right: 36px;
        unicode-bidi: embed; }
      body[dir=rtl] md-input-container.md-icon-left > label {
        right: 36px;
        unicode-bidi: embed; }
      md-input-container.md-icon-left > label bdo[dir=rtl] {
        direction: rtl;
        unicode-bidi: bidi-override; }
      md-input-container.md-icon-left > label bdo[dir=ltr] {
        direction: ltr;
        unicode-bidi: bidi-override; }
  md-input-container.md-icon-right {
    padding-left: 0;
    padding-right: 36px; }
    html[dir=rtl] md-input-container.md-icon-right {
      padding-left: 36px;
      unicode-bidi: embed; }
    body[dir=rtl] md-input-container.md-icon-right {
      padding-left: 36px;
      unicode-bidi: embed; }
    md-input-container.md-icon-right bdo[dir=rtl] {
      direction: rtl;
      unicode-bidi: bidi-override; }
    md-input-container.md-icon-right bdo[dir=ltr] {
      direction: ltr;
      unicode-bidi: bidi-override; }
    html[dir=rtl] md-input-container.md-icon-right {
      padding-right: 0;
      unicode-bidi: embed; }
    body[dir=rtl] md-input-container.md-icon-right {
      padding-right: 0;
      unicode-bidi: embed; }
    md-input-container.md-icon-right bdo[dir=rtl] {
      direction: rtl;
      unicode-bidi: bidi-override; }
    md-input-container.md-icon-right bdo[dir=ltr] {
      direction: ltr;
      unicode-bidi: bidi-override; }
    md-input-container.md-icon-right > md-icon:last-of-type {
      margin: 0;
      right: 2px;
      left: auto; }
      html[dir=rtl] md-input-container.md-icon-right > md-icon:last-of-type {
        right: auto;
        unicode-bidi: embed; }
      body[dir=rtl] md-input-container.md-icon-right > md-icon:last-of-type {
        right: auto;
        unicode-bidi: embed; }
      md-input-container.md-icon-right > md-icon:last-of-type bdo[dir=rtl] {
        direction: rtl;
        unicode-bidi: bidi-override; }
      md-input-container.md-icon-right > md-icon:last-of-type bdo[dir=ltr] {
        direction: ltr;
        unicode-bidi: bidi-override; }
      html[dir=rtl] md-input-container.md-icon-right > md-icon:last-of-type {
        left: 2px;
        unicode-bidi: embed; }
      body[dir=rtl] md-input-container.md-icon-right > md-icon:last-of-type {
        left: 2px;
        unicode-bidi: embed; }
      md-input-container.md-icon-right > md-icon:last-of-type bdo[dir=rtl] {
        direction: rtl;
        unicode-bidi: bidi-override; }
      md-input-container.md-icon-right > md-icon:last-of-type bdo[dir=ltr] {
        direction: ltr;
        unicode-bidi: bidi-override; }
  md-input-container.md-icon-left.md-icon-right {
    padding-left: 36px;
    padding-right: 36px; }

@media screen and (-ms-high-contrast: active) {
  md-input-container.md-default-theme > md-icon {
    fill: #fff; } }
